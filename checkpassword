#!/usr/bin/env python
import ldap
import sys
import os
import traceback
from settings import *

def NOAUTH():
    sys.exit(1)

def NOEXIST():
    sys.exit(3)

def ERROR():
    sys.exit(111)

def query(strfilter,attrs,user=binduser,passwd=bindpasswd):
    # blank passwords not allowed
    if passwd == '' or passwd is None:
        NOAUTH() 
    l = ldap.open(server)
    l.set_option(ldap.OPT_REFERRALS, 0)
    l.simple_bind(user,passwd)
    scope = ldap.SCOPE_SUBTREE


    result_id = l.search(base, scope, strfilter, attrs)

    result_type, result_data = l.result(result_id, timeout)
    if result_data != []:
        return result_data

def getDN(user,domain='*'):
    try:
        ldapUser = query(strfilter.format(user=user,domain=domain),['cn'])# what we get doesn't matter
        if ldapUser != [] and ldapUser is not None:
            return ldapUser[0][0] # dn
    except:
        with open('/tmp/err.log','a') as f:
            f.write(user+': getDN\n')
            f.write(str(ldapUser)+'\n')
            traceback.print_exc(file=f)
    NOEXIST()

def checkUserAuth(user,passwd,domain='*'):
    dn = getDN(user,domain)
    try:
        return query(strfilter.format(user=user,domain=domain),['mail','maxStorage'],dn,passwd)[0][1]
    except ldap.OPERATIONS_ERROR as e:
        if 'DSID-0C090627' in e.message['info']:
            NOAUTH()
        else:
            raise
    except:
        with open('/tmp/err.log','a') as f:
            f.write(user+' checkUserAuth\n')
            traceback.print_exc(file=f)
        NOAUTH()

def getUserAttr(user,domain='*'):
    dn = getDN(user,domain)
    try:
        return query(strfilter.format(user=user,domain=domain),['mail','maxStorage'],binduser,bindpasswd)[0][1]
    except:
        with open('/tmp/err.log','a') as f:
            f.write(user+' getUserAttr\n')
            traceback.print_exc(file=f)
        ERROR()

def setUserAttr(data):
    # set attributes
    user,domain = data['mail'][0].split('@')
    if 'maxStorage' in data:
        os.environ['userdb_quota_rule'] = '*:storage={0}M'.format(data['maxStorage'][0])
    os.environ['USER'] = data['mail'][0]
    os.environ['HOME'] = '/var/vmail/{domain}/{user}'.format(domain=domain,user=user)
    if userdb:
        os.environ['AUTHORIZED'] = '2'
    os.environ['userdb_uid'] = 'vmail'
    os.environ['userdb_gid'] = 'vmail'
    os.environ['EXTRA'] = 'userdb_quota_rule userdb_uid userdb_gid'
    # run program and return
    os.system(sys.argv[1])
    # must exit special for master user
    if userdb and (master or lmtp):
        sys.exit(2)


userdb = 'AUTHORIZED' in os.environ
master = 'MASTER_USER' in os.environ
lmtp = os.environ['SERVICE'] == 'lmtp'

# close stdin and get parameters
os.fdopen(3).close()
user = os.environ['AUTH_USERNAME']
try:
    domain = os.environ['AUTH_DOMAIN']
except KeyError:
    domain = '*'
try:
    passwd = os.environ['AUTH_PASSWORD']
except KeyError:
    passwd = ''

# check different senarios
data = None
if userdb:
    data = getUserAttr(user,domain)
else:
    data = checkUserAuth(user,passwd,domain)

if data is None:
    NOAUTH()
else:
   setUserAttr(data) 
